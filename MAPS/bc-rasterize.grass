# attempting to use GRASS to rasterize timezone data at high resolution

### fresh start starts here

# this is shell invocation

# grass74 -c EPSG:4326 /home/user/BCGIT/MAPS/timezones/

# load the timezones shape file

v.in.ogr ne_10m_time_zones.shp

# there are warnings, but we ignore them

# let's find the highest and lowest time zones

db.select "SELECT MIN(zone), MAX(zone) FROM ne_10m_time_zones"

# we need a POSITIVE valued integer field to create a raster map

db.execute "ALTER TABLE ne_10m_time_zones ADD COLUMN tzInt INTEGER"

# because there are 1/4 hour time zones, we need to multiply by 4

# min zone was -12 so we need to add 12 to keep things positive

db.execute "UPDATE ne_10m_time_zones SET tzInt = (zone+12)*4"

# lets check to make sure it looks ok

db.select "SELECT DISTINCT(tzInt) FROM ne_10m_time_zones ORDER BY 1"

# the numbers go from 0 to 104 with gaps, which is good

# rasterize the vector time zone file at 2^18 cols x 2^17 rows (about
# 5 arcseconds and better than 400m, though still not fantastic)

g.region cols=262144 rows=131072

g.remove -f type=raster name=ne_10m_time_zones_rast

v.to.rast input=ne_10m_time_zones output=ne_10m_time_zones_rast 
 attribute_column=tzInt use=attr &

# I can use "jobs -l" and "bc-waitpid.pl" to wait for above since its
# a regular shell process

# lets look at before we convert it to png

d.rast ne_10m_time_zones_rast










### fresh start ends here

# this will create it, do NOT use "d.mon start"
d.mon wx0

# load shp file (must unzip!)

v.in.ogr /mnt/villa/user/NOBACKUP/EARTHDATA/NATURALEARTH/ne_10m_time_zones.shp

# find out how it got named

g.list type=all

# it's ne_10m_time_zones as expected

v.to.rast input=ne_10m_time_zones output=ne_10m_time_zones_rast 
 attribute_column=zone use=attr

# above creates a raster map, below displays it

d.rast ne_10m_time_zones_rast

# some info on it

r.info ne_10m_time_zones_rast

# lets write it

d.out.file output=temp-grass.png size=131072,65536

# 16000 x 8000 works fine

# 36000 x 18000 is native resolutoin (raster map size)

# but creating an image that size crashes

# lets try geotiff

r.out.gdal input=ne_10m_time_zones_rast 
 output=/home/user/20190501/temp1.tif format=GTiff

# above does NOT require bringing up an X window

r.out.gdal input=ne_10m_time_zones_rast
 output=/home/user/20190501/temp1.png format=PNG

# note that you can NOT add overview=5 or anything to above

# now lets rasterize at 131072 x 65536 and PNGify

v.to.rast input=ne_10m_time_zones output=ne_10m_time_zones_rast 
 attribute_column=zone use=attr

v.to.rast input=ne_10m_time_zones output=ne_10m_time_zones_rast2
 attribute_column=zone use=attr memory=64000

# above does NOT make raster any bigger

g.region rows=65536 cols=131072

v.to.rast input=ne_10m_time_zones output=ne_10m_time_zones_rast3
 attribute_column=zone use=attr memory=64000

r.info ne_10m_time_zones_rast3

r.out.gdal input=ne_10m_time_zones_rast3
 output=/home/user/20190501/temp3.png format=PNG

# shooting for near terapixel

g.region cols=1048576 rows=524288

v.to.rast input=ne_10m_time_zones output=ne_10m_time_zones_rast4
 attribute_column=zone use=attr memory=64000

r.out.gdal input=ne_10m_time_zones_rast4
 output=/home/user/20190501/temp4.png format=PNG

# change color style of raster

# this does nothing-- display apparently creates its own color table
r.colors -r map=ne_10m_time_zones_rast3

r.colors map=ne_10m_time_zones_rast3 color=roygbiv

# below fails, values are floating point

r.colors map=ne_10m_time_zones_rast3 color=random

# can re-render map in display to see preview

r.describe map=ne_10m_time_zones_rast3

r.mapcalc 'tz2 = 4*zone'

# looking at our data so we can "reproject" to integers

db.tables

db.columns ne_10m_time_zones

db.select "SELECT * FROM ne_10m_time_zones LIMIT 20"

db.select -v "SELECT * FROM ne_10m_time_zones LIMIT 20"

db.describe ne_10m_time_zones | less

g.gisenv set="GRASS_PAGER=less"

db.select -v "SELECT DISTINCT(name) FROM ne_10m_time_zones"

v.to.rast input=ne_10m_time_zones output=ne_10m_time_zones_rast5
 attribute_column=name use=attr memory=64000

db.select -v "SELECT DISTINCT(tz_namesum) FROM ne_10m_time_zones"

db.select -v "SELECT DISTINCT(zone*4) FROM ne_10m_time_zones ORDER BY 1"

db.execute "ALTER TABLE ne_10m_time_zones ADD COLUMN tzInt INTEGER"

db.execute "UPDATE ne_10m_time_zones SET tzInt = zone*4"

db.select -v "SELECT DISTINCT(tzInt) FROM ne_10m_time_zones ORDER BY 1"

# must do this first

g.region cols=131072 rows=65536

# success!

v.to.rast input=ne_10m_time_zones output=ne_10m_time_zones_rast
 attribute_column=tzInt use=attr memory=64000

r.out.gdal input=ne_10m_time_zones_rast
 output=/home/user/20190501/timezones.png format=PNG

# cleanup

g.remove name=ne_10m_time_zones_rast type=all

r.colors -r map=ne_10m_time_zones_rast

r.colors map=ne_10m_time_zones_rast color=roygbiv

r.out.gdal input=ne_10m_time_zones_rast
 output=/home/user/20190501/timezones.png format=PNG

# there appears to be an error in the input shp file so trying again

v.in.ogr /mnt/villa/user/NOBACKUP/EARTHDATA/NATURALEARTH/10m_cultural/ne_10m_time_zones.shp

# this did give error messages including

d.mon wx0

d.vect ne_10m_time_zones

# the above looks fine, so lets rasterize

db.execute "ALTER TABLE ne_10m_time_zones ADD COLUMN tzInt INTEGER"
db.execute "UPDATE ne_10m_time_zones SET tzInt = zone*4"

g.region rows=65536 cols=131072

g.remove -f type=raster name=ne_10m_time_zones_rast

v.to.rast input=ne_10m_time_zones output=ne_10m_time_zones_rast
 attribute_column=tzInt use=attr memory=64000 &

r.colors map=ne_10m_time_zones_rast color=random

r.out.gdal input=ne_10m_time_zones_rast
 output=/home/user/20190501/timezones.png format=PNG

d.rast ne_10m_time_zones_rast

r.colors 

# Try to import again, snapping with at least 1e-13: 'snap=1e-13'

g.remove -f type=vector name=ne_10m_time_zones

v.in.ogr snap=1e-12
 input=/home/user/NOBACKUP/EARTHDATA/NATURALEARTH/10m_cultural/ne_10m_time_zones.shp

db.execute "ALTER TABLE ne_10m_time_zones ADD COLUMN tzInt INTEGER"
db.execute "UPDATE ne_10m_time_zones SET tzInt = zone*4"

v.to.rast input=ne_10m_time_zones output=ne_10m_time_zones_rast
 attribute_column=tzInt use=attr memory=64000 &

r.out.gdal input=ne_10m_time_zones_rast
 output=/home/user/20190501/timezones.png format=PNG





