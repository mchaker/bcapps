MAP SERVER
==========

[as of 7 May 2019, geoserver installed + will play heavily into this project]

Notes for map server:

  - TODO: NOTE TO SELF: the stuff in ~/20190204/README should be
  quasi-merged here

  - TODO: consider using opengeofiction's much smaller and more well-controlled map

  - TODO: add mineral and ore deposits data

  - TODO: add continental plate boundaries

  - TODO: https://github.com/Overv/WebCraft is a minecraft in JS of sorts

  - TODO: maybe add HBASE and GIMS data
  https://sedac.ciesin.columbia.edu/mapping/gmis-hbase/explore-view/

  - TODO: maybe use raster2pgsql to convert raster maps to
  postgresql-- is that faster than using a binary file that's squashed
  (probably not?)

  - TODO: figure out what color ramp to use for continuous values--
  the LGBTQ flag seems to use a nice ramp-- violet to purple to
  spectrum to red is nice too and can maybe be extended to black and
  white too

  - TODO: show user's location as arcsecond square, but also as
  containing 3 arcsecond square, 7.5 arcsecond, 30 arcsecond, etc

  - TODO: look at https://github.com/globalmaps

  - TODO: look at data I am pulling into personal directories ~/20190509 and ~/20190509/MORE

  - TODO: look into VRT virtual raster files to combine many raster
  images virtually (will geoserver accept these?) [test these w fewer
  files first]

  - TODO: maybe look at MapProxy

  - TODO: look at animal habitat data I have (but it's REALLY big and
  hard to load) [and may only include "endangered" species, not all
  species

  - TODO: why does natural earth have so many different bathmetry
  shape files instead of just having a raster/shape for every
  underwater elevation?

  - TODO: use squashfs or zipfs to shrink large files if needed. Stats:

    - SRTM1 total length of all .hgt files: 370,732,276,590 bytes

    - SRTM1 distribution zip file: 54,649,761,295 bytes (this zip file
    can not be mounted with fuse-zip and has note "This zip is
    compressed with BZip2 (with 900Kb dictionary size)"

    - SRTM1 regular squashfs of hgt files separately: 107,125,305,344 bytes

    - SRTM1 regular squashfs of all hgt files glued together (ie, not
    as a directory of files, but rather a single 370,732,276,590 byte
    file): 107,134,029,824 bytes

    - SRTM1 xz squashfs similar to above: 70,302,179,328 bytes

    - SRTM1 zpaq'd as list of hgt files: 47,037,258,211 bytes (just as
    a data point, can not seek inside a zpaq)

    - SRTM1 total size of HGT files converted to TIF: 92,888,522,332 bytes

    - SRTM1 single file elevation.tif of all SRTM1 data: 100,140,355,090 bytes

    - SRTM1 squashfs of elevation.tif: 99,031,736,713 bytes

  - TODO: disallow changes to maps on server (ie, turn off the 'edit' features)

  - TODO: consider using HTML canvas directly instead of leaflet to 1)
  give maps a more "scientific" look, 2) avoid forced zooming and
  allow lower-level zooming

  - TODO: add ethniticty information I downloaded

  - TODO: stop using ws.terramapadventure.com and start using
  mapserver.94y.info or something (in progress, ms.94y.info and all terramapadventure.com now point to new server)

  - TODO: get https for whatever domain I end up using

  - TODO: configure geoserver to run as https

  - TODO: create a basic home page similar to TMA

  - Request not in JSON, advise them to send "{cmd: 'help'}"

  - help should include sources and limitations

  - should listen on UDS and client programs can provide web/socket service

  - TODO: create legends for all maps, automatically if possible

  - TODO: see ~/NOBACKUP/EARTHDATA/*/README files

  - TODO: test and use geoserver features for both map "tiling" and
  feature location (ie, which polygons are you in, query feature)

  - TODO: recolor the land use map but keep it as GeoTIFF (ie, apply a style to it based on its preferred colors)

  - TODO: set GEOSERVER_HOME and similar env vars if I want to keep using geoserver locally (but maybe not?)

  - NOT: considered hosting slippy tiles myself using mini pbf file,
  but really need a lot more space and can't serve from 
  uber-compressed file

  - NOT: considered overlaying entire large image on Leaflet (instead
  of breaking into tiles) but that doesn't work well

  - TODO: consider adding Trewartha climate classification scheme

  - TODO: climate-legend.txt has the color code/data for climates

Data provided:

  - Elevation (SRTM 3 second + alt source for high alt) (maybe SRTM 1)

  - Climate (Koeppen-Geiger)

  - Astronomical phenomena (computed) (sun/moon rise/set)

  - Land slope (in NOBACKUP/EARTHDATA/ELEVATION/slope.txt.bz2 and perhaps other locations)

  - Land use (ESACCI)

  - Sun/moon rise/set map (not just times per location) (TODO: write C
  program to determine subsolar point accurately)

  - TODO: population density?

  - TODO: timezone

  - TODO: nation/state/etc?

  - TODO: Islam prayer times? (like sunrise/sunset)

  - TODO: point buffers (multiple point buffers?)

  - TODO: weather (but just proxying another source?)

  - TODO: allow opacity control

  - TODO: add coastal distance data w caveats and maybe my own version

  - TODO: for SHP files where layer has finite number of values,
  enumerate these values

  - TODO: go flat bin files for raster data, not gdal (for vector data, may need to rasterize however)

  - TODO: in orthographic projection, looking near north pole means
  looking at all values x tiles which is terrible-- find and create
  better projection?

  - TODO: add annual rainfal map?

  - TODO: add wealth data? 
  https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5800392/

  - TODO: add solar/lunar eclipse paths?

  - TODO: overlay star map?

  - TODO: since OSM tileservers send mercator tiles, may "have" to go
  mercator all the way?

  - TODO: transport tileserver has names in English, use it instead of
  main tilserver?

  - TODO: antipodal map

  - TODO: longitude shift maps: is Albuquerque really south of Tokyo? 
  Not just as a point but if the two cities were overlaid by moving
  them east and west. This works for longitudes because, at the same
  latitude, everything is at the same scale. This won't work for
  latitude because, on a Mercator map, the distance between latitudes
  is not equal.

  - TODO: use mapbox as free tile server (?)

  - TODO: add voronoi maps (look into d3.geo.voronoi)

  - TODO: add "borderline" maps that aren't quite the same as voronoi/buffer

  - TODO: add radar maps

TODO: let user "be" on a 1 arcsecond square as current virtual location
and draw this square on the map

TODO: find English only OSM tileservers if possible

What I have:

  - 200G server on digitalocean

  - binary versions of elevation, climate, land slope and land use
  (but need help combining them)

  - program that computes astronomical phenomena

Data sources and information:

  - http://srtm.csi.cgiar.org/srtmdata/

  - https://oceancolor.gsfc.nasa.gov/docs/distfromcoast/ (coastal distance)

Help I need w/ map server:

  - Converting front end JS requests to back end file byte requests

  - Gluing large bin files together

  - Returning data consistently and quasi-efficiently

  - Testing accuracy

Basic commands:

  - cmd=(climate|landuse|elevation) lats=, latn=, lonw=, lone= : obtain data for a given bounding box

  - cmd=source data=(climate|landuse|elevation): data source information

  - cmd=key data=(climate|landuse|elevation): the key to convert returned values to meaningful values

  - cmd=meta data=(climate|landuse|elevation): metadata about the various data types (TODO: this may need to be split into sources)

Notes:

  - The GMTED2010 files for far north and far south regions DO exist
  as ZIP files on earthexplorer.usgs.gov, but you have to request them
  as a special case by choosing points or lines within those areas.

  - `gdalinfo 70n120w_20101117_gmted_max075.tif` shows gdal does
  recognize the TIFs I mention above (the rest of the data is in ADF
  format)

Improvements:

  - orthographic global projection, not Mercator/equirectangular (EPSG:9840?)

TODO later:

  - TODO: reduce disk space on digitalocean (may have to create new
  share, copy, and delete the old one) to not pay for unused resources

  - TODO: look into "accessible" maps for the color blind or similar

  - TODO: if styling maps, may have to recreate tile caches

WFS Stuff:

Here's the data geoserver lets me query on my maps (and how I got that data):

This curl command gives capabilities:

curl -o  wms-capa.txt 'http://ws.terramapadventure.com:8080/geoserver/TMA-YAMC/wms?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetCapabilities'

grep for <Name> gives (among other things):

        <Name>Beck_KG_V1_present_0p0083</Name>
        <Name>ESACCI-LC-L4-LCCS-Map-300m-P1Y-2015-v2.0.7</Name>
        <Name>ne_10m_admin_0_countries</Name>
        <Name>ne_10m_time_zones</Name>
        <Name>ne_10m_urban_areas</Name>
        <Name>ne_10m_admin_1_states_provinces</Name>

These are the queryable layers.

curl -o `timestamp` 'http://ws.terramapadventure.com:8080/geoserver/TMA-YAMC/wcs?SERVICE=WCS&VERSION=1.1.1&REQUEST=DescribeCoverage&identifiers=Beck_KG_V1_present_0p0083'

The output of the above (cleaned up w/ tidy -xml) shows this layer has
only one key:

<wcs:Key>PALETTE_INDEX</wcs:Key>

To actually query the value of this key at a given point (example w/
different map)

curl -o `timestamp` 'http://ws.terramapadventure.com:8080/geoserver/wfs?service=wfs&version=2.0.0&request=GetPropertyValue&bbox=34,-107,36,-105&typeNames=TMA-YAMC:ne_10m_admin_0_countries&valueReference=NAME_EN'

This gives all the VECTOR maps and features at once:

curl -o `timestamp` 'http://ws.terramapadventure.com:8080/geoserver/TMA-YAMC/wfs?SERVICE=WFS&VERSION=1.1.1&REQUEST=DescribeFeatureType'

  <xsd:complexType name="ne_10m_admin_0_countriesType">

Raster maps:

curl -o `timestamp` 'http://ws.terramapadventure.com:8080/geoserver/TMA-YAMC/wcs?SERVICE=WCS&VERSION=1.1.1&REQUEST=GetCapabilities'

lists all raster maps (but not what I can query from them)

<ows:Title>Beck_KG_V1_present_0p0083</ows:Title>
[...]

to see what I can query:

curl -o `timestamp` 'http://ws.terramapadventure.com:8080/geoserver/TMA-YAMC/wcs?SERVICE=WCS&VERSION=1.1.1&REQUEST=DescribeCoverage&IDENTIFIERS=Beck_KG_V1_present_0p0083,ESACCI-LC-L4-LCCS-Map-300m-P1Y-2015-v2.0.7,gpw_v4_population_count_rev11_2020_30_sec'

URLS for data we actually want (as of maps I had uploaded on 5/13/19):

TMA-YAMC:Beck_KG_V1_present_0p0083 PALETTE_INDEX (only one available)

ESACCI-LC-L4-LCCS-Map-300m-P1Y-2015-v2.0.7 GRAY_INDEX (only one avail)

gpw_v4_population_count_rev11_2020_30_sec GRAY_INDEX (only one avail)

ne_10m_admin_0_countries NAME_EN

ne_10m_admin_1_states_provinces name_en

tz_name1st and/or utc_format

ne_10m_urban_areas (no useful fields, just whether you are in one or not)

NOTES
=====

ocal/christmas-candy in the cpt-city Discord section is a good
"divergent gradient" (in my meaning), but it's hard to find many of
these

SRTM1 data goes from -12269 to 22894-- cursory glance shows these are
locations "blacked out" in google maps satellite, SRTM3 goes from
-9999 to 8806 (where -9999 means no data)

THINGS DONE
===========

Removed planet-latest.osm.pbf, giving up on idea to serve OSM tiles directly

MINITUAE
========

using gdal_merge with BIGTIFF changes the TIFF that is created, even
if the same TIFF could be created w/o this option

In qgis, you can assign a uuid to each row in an attribute table, but
coloring by it doesn't work

OLD STUFF
=========

Mercator maps are normally drawn with the North Pole at top, Equator
in the middle and South Pole at the bottom.

This project aims to use proj4 and openstreetmap.org and convert's
"convert -distort Perspective" to create Mercator (and other
projection) maps with arbitrary north/south poles and direction.

This isn't trivial even for static maps, since the slippy tile level
you have to use varies with position. If you put a large city at the
north pole, for example, you will need more detail in that area, since
Mercator maps use more area near the poles.

Ultimate goal is to create a map that overlays google maps with any
given projection and parameters. This means find and computing the
reshaped slippy tiles in real time.

See also:

http://gis.stackexchange.com/questions/29101/create-mercator-map-with-arbitrary-center-orientation

http://iridl.ldeo.columbia.edu/docfind/facetedbrowser.html (lots of data)

http://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCEP-NCAR/.CDAS-1/.mc6190/.Intrinsic/.MSL/.pressure/T/%28Jan%20%29VALUES/a-/-a/X+Y+fig-+colors+ (possible WCS server)

http://iridl.ldeo.columbia.edu/SOURCES/.NOAA/.NCEP-NCAR/.CDAS-1/.mc6190/.Intrinsic/.MSL/.pressure/T/%28Jan%20%29VALUES/a-/-a/X+Y+fig-+colors+ PIPE +contours+land+-fig+//pressure/98704.93/103623.7/plotrange/Y/-90/90/plotrange//XOVY+null+psdef//plotaxislength+432+psdef//plotborder+72+psdef//fnt+%28Helvetica%29+psdef/wms.xml (head of WMS data?)

https://www.opendap.org/ to serve data?


