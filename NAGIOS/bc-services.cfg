# generic service from http://nagios.sourceforge.net/docs/3_0/objectdefinitions.html#service

define service {
 name generic-service
 active_checks_enabled 1
 passive_checks_enabled 1
 parallelize_check 1
 obsess_over_service 1
 check_freshness 0
 notifications_enabled 1
 event_handler_enabled 1
 event_handler bc
 flap_detection_enabled 1
 failure_prediction_enabled 1
 process_perf_data 1
 retain_status_information 1
 retain_nonstatus_information 1
 is_volatile 0
 check_period 24x7
 max_check_attempts 3
 normal_check_interval 10
 retry_check_interval 2
 contacts noone
 notification_options w,u,c,r
 notification_interval 60
 notification_period 24x7
 register 0
}

# TODO: not all my services need to be checked equally often; create
# explicit normal_check_interval for all services just to confirm I've
# actually looked at the interval

# this runs a bunch of external commands at once hourly (sort of a hack)

define service {
 use generic-service
 host_name localhost
 normal_check_interval 20
 service_description extra
 check_command raw!"bc_extras ('/home/barrycarter/BCGIT/NAGIOS/extras.txt', '/home/barrycarter/extra-nagios-commands.txt')"
}

# warn if I have unpushed git changes (this might be a bad idea)

define service {
 use generic-service
 host_name localhost
 normal_check_interval 60
 service_description git
 check_command raw!"bc_git ('/home/barrycarter/BCGIT')"
}

# check that all filespecs in recentfiles.txt are recent, replaces
# several other tests

define service {
 use generic-service
 host_name localhost
 normal_check_interval 10
 service_description recentfiles
 check_command raw!"bc_check_file_of_files_age ('/home/barrycarter/BCGIT/NAGIOS/recentfiles.txt /home/barrycarter/recentfiles.txt')"
}

# My "SCRATCH" file exists so I can X11 cut/paste (rxvt/xterm don't
# appear to always support that) and anything I put there should be
# transferred to another file, so a non-empty SCRATCH file is bad

define service {
 use generic-service
 host_name localhost
 normal_check_interval 1440
 service_description scratchfile
 check_command raw!"bc_nagios_file_size('/home/barrycarter/SCRATCH', 0)"
}

# I should not back up files in /tmp so /usr/local/etc/quikbak/tmp
# should never exist
define service {
 use generic-service
 ; once a day is more than enough
 normal_check_interval 1440
 notification_interval 1440
 host_name localhost
 service_description notmpbackup
 check_command raw!"bc_404 ('/usr/local/etc/quikbak/tmp')"
}

# check for unrecognized entries in my bankstatements (twice daily)
define service {
 use generic-service
 ; twice a day
 normal_check_interval 720
 notification_interval 720
 host_name localhost
 service_description badbank
 check_command raw!"check_mysql_query -q 'SELECT COUNT(*) FROM badbank' -d test -v -w 0 -c 0"
}

# check for unrecognized entries in my creditcardstatements (twice daily)
define service {
 use generic-service
 ; twice a day
 normal_check_interval 720
 notification_interval 720
 host_name localhost
 service_description badcredit
 check_command raw!"check_mysql_query -q 'SELECT COUNT(*) FROM badcredit' -d test -v -w 0 -c 0"
}

# in May 2017, I stopped using the category 'GAS' in my purchases db
# since it's ambiguous whether I mean vehicular fuel (which is now
# "CARGAS") or fuel for indoor appliances (which is now "NATURALGAS");
# these checks confirm I no longer use these categories (this
# explanation is completely useless since the views below were created
# outside GIT) [two tests, one for bankstatements, other for credit
# card statements]

define service {
 use generic-service
 ; twice a day
 normal_check_interval 720
 notification_interval 720
 host_name localhost
 service_description badgasbank
 check_command raw!"check_mysql_query -q 'SELECT COUNT(*) FROM badgasbank' -d test -v -w 0 -c 0"
}

define service {
 use generic-service
 ; twice a day
 normal_check_interval 720
 notification_interval 720
 host_name localhost
 service_description badgascredit
 check_command raw!"check_mysql_query -q 'SELECT COUNT(*) FROM badgascredit' -d test -v -w 0 -c 0"
}

# dailyish, check if my domains are about to expire
define service {
 use generic-service
 ; twice a day
 normal_check_interval 720
 notification_interval 720
 host_name localhost
 service_description domainexp
 check_command raw!"bc_check_domain_exp ()"
}

# as of Sep 2015, I use this bank less frequently, so upping to 9 days
define service {
 use generic-service
 ; every 6 hours is a bit much, but ok
 normal_check_interval 360
 notification_interval 360
 host_name localhost
 service_description bankstatements
 check_command raw!"check_mysql_query -q 'SELECT DATEDIFF(NOW(),MAX(DATE)) FROM bankstatements' -d test -c 9 -v"
}

# same for credit cards
define service {
 use generic-service
 ; every 6 hours is a bit much, but ok
 normal_check_interval 360
 notification_interval 360
 host_name localhost
 service_description creditstatements
 check_command raw!"check_mysql_query -q 'SELECT DATEDIFF(NOW(),MAX(DATE)) FROM credcardstatements2' -d test -c 3 -v"
}

# uncategorized entries in bankstatements?
define service {
 use generic-service
 ; twice a day
 normal_check_interval 720
 notification_interval 720
 host_name localhost
 service_description bankcat
 ; amount<0 means I paid out, didnt categorize pre-date below
 check_command raw!"check_mysql_query -q 'SELECT COUNT(*) FROM badbankcat' -d test -v -w 0 -c 0"
}

# uncategorized entries in credcardstatements2?
define service {
 use generic-service
 ; twice a day
 normal_check_interval 720
 notification_interval 720
 host_name localhost
 service_description credcardcat
 ; amount<0 means I paid out, didnt categorize pre-date below
 check_command raw!"check_mysql_query -q 'SELECT COUNT(*) FROM badcreditcat' -d test -v -w 0 -c 0"
}

# entries in credcardstatements2 with no card number
define service {
 use generic-service
 ; twice a day
 normal_check_interval 720
 notification_interval 720
 host_name localhost
 service_description credcardcat
 ; amount<0 means I paid out, didnt categorize pre-date below
 check_command raw!"check_mysql_query -q 'SELECT COUNT(*) FROM badcard' -d test -v -w 0 -c 0"
}

# do I have unchecked/unread email (alpine status "o")
define service {
 use generic-service
 ; this one should be checked every minute
 normal_check_interval 1
 host_name localhost
 service_description email
 ; when alpine filters out messages they are not actually deleted but just
 ; get 'X-Status: D'. The -A1 and 2nd grep below ignore psuedo-deleted messages
 check_command raw!"fgrep -A1 -x 'Status: O' /home/barrycarter/mail/IMAP-LOCAL|fgrep -x 'X-Status: '"!--func=1is0
}

# do I have urgent email (flag I created myself and have an alpine
# filter rule that auto-urgentifies certain mail); the double grep is
# for things like:
# X-Keywords: $forwarded URGENT

define service {
 use generic-service
 ; this one should be checked every 3 hours (urgent is a daily thing)
 normal_check_interval 180
 host_name localhost
 service_description email_urgent
 check_command raw!"egrep '^X-Keywords: ' /home/barrycarter/mail/IMAP-LOCAL | fgrep -i urgent"!--func=1is0
}

# plivo is currently hosting some of my sound files but may stop doing
# so; this semi-efficiently checks that one of the files is there
# (presumably, if one is there, they are all there)

define service {
 use generic-service
 host_name localhost
 normal_check_interval 1440
 service_description plivosound
 check_command raw!"bc_head_size ('http://s3.amazonaws.com/plivocloud/4c743546-7e1b-11e2-9060-002590662312.mp3', 1962720)"
}

# confirm my rsyncs of bcinfo3 logs are sufficiently recent

define service {
 use generic-service
 host_name localhost
 normal_check_interval 1440
 service_description bcinfo3log
 check_command raw!"bc_info_log ('/home/barrycarter/html/weblogs/bcinfo3/access.log')"
}

# I sometimes edit my "diary" files, but if I'm editing last year's
# file, I've got the wrong file. This warns me when I do this. There
# are three exceptional cases where I know I made a mistake +
# corrected it.
# TODO: generalize this to work for any year?
# test removed 8 Jul 2013 as I extensively edit old files

# define service {
#  use generic-service
#  host_name localhost
#  service_description diary
#  ; fgrep finds files modified in 2013, egrep -v ignores this years files
#  ; invert the sense of the grep, since we want failure
#  check_command raw!"ls -l /home/barrycarter/TODAY/ |fgrep 2013- | fgrep -v EXTRA |egrep -v '2013[01]'|fgrep -vf /home/barrycarter/today-lateedit.txt"!--func=1is0
# }

# confirm hardware clock is close to computer clock
define service {
 use generic-service
 host_name localhost
 normal_check_interval 360
 service_description hwclock
 check_command raw!"bc_hwclock_test ()"
}


# my "diary" files should never contain "notemark" (I use that phrase
# to indicate something Im putting in a diary file temporarily, but
# that needs to be moved somewhere else)
define service {
 use generic-service
 host_name localhost
 service_description notemark
 normal_check_interval 1440
 ; single quote tilde to avoid shell expansion to /home/barrycarter
 check_command raw!"fgrep -i notemark `find /home/barrycarter/TODAY -mtime -30 -type f | fgrep -v '~'`"!--func=1is0
}

# make sure I have a lo route (bad things happen otherwise)
# as of 14 Aug 2017, saopaulo no longer has this issue, so removing

# define service {
# use generic-service
# host_name localhost
# normal_check_interval 720
# service_description loopback
# check_command raw!"netstat -rn | egrep 'lo$'"
# }

# make sure my hostname is correct (dhclient sometimes resets it?)
define service {
 use generic-service
 host_name localhost
 normal_check_interval 720
 service_description hostname
 check_command raw!"bc_hostname_test ()"
}

# confirm Ive taken enough metformin for calories consumed
# dropped 10 Jun 2013
; define service {
; use generic-service
; host_name localhost
; service_description metformin
; check_command raw!"bc_metformin_test ()"
; }

# check mount points are up and running
define service {
 use generic-service
 normal_check_interval 30
 host_name localhost
 service_description check_mounts
 check_command raw!"bc_check_mounts2 ('/home/barrycarter/BCGIT/BRIGHTON/mounts.txt')"
}

# make sure barrycarter.info is resolving properly (right at the root level)

define service {
 use generic-service
 host_name localhost
 service_description dns_a
 normal_check_interval 60
 check_command raw!"bc_dig ('barrycarter.info','143.95.253.70')"
}

# 94y.info DNS
# TODO: this is also DNS for many subsites, maybe check a few of those too

define service {
 use generic-service
 host_name localhost
 service_description dns_b
 normal_check_interval 60
 ; tr below since cut needs tab, but dig outputs space sometimes, sigh
 ; tee below because this isnt working
 check_command raw!"bc_dig ('94y.info','193.183.99.226')"
}

# and the MX records
# changed sort order since I now use LC_ALL=C

define service {
 use generic-service
 host_name localhost
 normal_check_interval 60
 service_description dns_mx
 check_command raw!"dig -t mx +trace barrycarter.info | egrep 'IN[[:space:]]MX' | cut -f 5 | sort | paste -s -d, | fgrep -ix '1 aspmx.l.google.com.,10 aspmx2.googlemail.com.,10 aspmx3.googlemail.com.,10 aspmx4.googlemail.com.,10 aspmx5.googlemail.com.,5 alt1.aspmx.l.google.com.,5 alt2.aspmx.l.google.com.'!--func=1is2
}

# I use opendns locally, but sometimes dhcp resets resolv.conf
# added 127.0.0.1 on 29 Dec 2012, now using dnsmasq

# dropped 14 Aug 2017, letting dhclient-script do the work

# define service {
#  use generic-service
#  host_name localhost
#  normal_check_interval 60
#  service_description resolv
#  check_command raw!"sort /etc/resolv.conf | cut -d' ' -f 2 | paste -s -d, | fgrep -x '127.0.0.1,208.67.220.220,208.67.222.222'"!--func=1is2!--fix="fix_resolv()"
# }

# make sure maillog shows no unsent messages (except to crontab)
# 31 May 2013: adding exception for autoemails from tweety@barrycarter.info
# TODO: can I use grep -q here; using wc is kludgey
define service {
 use generic-service
 host_name localhost
 normal_check_interval 60
 service_description maillog
 check_command raw!"sudo fgrep 'stat=' /var/log/maillog | fgrep -iv 'stat=sent' | fgrep -iv 'to=crontab@' | fgrep -iv 'ctladdr=tweety@barrycarter.info'"!--func=1is0
}

# localhost SMTP
define service {
 use generic-service
 host_name localhost
 service_description smtp
 normal_check_interval 15
 check_command raw!"check_smtp -v -H 127.0.0.1 -e 'ESMTP'"
}

# my /tmp directory sometimes gets really big
# <h>and if you've seen my coding style, you know why!</h>
# As a side note, this "fixes" the problem (caution!)
# mkdir /tmp.new; chmod 1777 /tmp.new; mv /tmp /tmp.old; mv /tmp.new /tmp
# (and delete /tmp.old when ready; this should preserve "open filehandles")

# bumped to 10M for saopaulo

define service {
 use generic-service
 host_name localhost
 normal_check_interval 60
 service_description tmpsize
 check_command raw!"bc_nagios_file_size('/tmp', 10000000)"
}

# same as above for bcinfo3, my webserver (not doing for bcinfo since
# it's a shared server)

define service {
 use generic-service
 host_name bcinfo3
 normal_check_interval 60
 service_description tmpsize
 check_command raw!"bc_nagios_file_size('/tmp', 1000000)"
}

# disk full
define service {
 use generic-service
 host_name localhost
 normal_check_interval 10
 service_description df
 check_command raw!"check_disk -v -c 5.99999 -u GB /"
}

# disk full for bcinfo3
define service {
 use generic-service
 host_name bcinfo3
 normal_check_interval 60
 service_description df
 check_command raw!"check_by_ssh -i /home/barrycarter/.ssh/id_rsa.bc -l root -H bcinfo3 -C 'check_disk -v -c 5.99999 -u GB /'"
}

# I was doing http tests using montastic's free services, but doing
# them here too (copied from nagyerass.txt, see there for comments)

# check cheapbay.barrycarter.info
# with montastic I also check the db version below, but not here
# http://1dba67f21d23895ff3022d513ed2193b.ebay.db.94y.info/

define service {
 use generic-service
 host_name bcinfo3
 service_description cheapbay
 ; removing -v, it causes "option f:4" error?
 check_command raw!"check_http -v -t 15 -f follow -H cheapbay.barrycarter.info -R 'photo' -u '/' -M 15m"
}

define service {
 use generic-service
 host_name bcinfo3
 service_description textweather
 check_command raw!"check_http -v -t 15 -f follow -H albuquerque.weather.94y.info -R 'ALBUQUERQUE INTERNATIONAL' -u '/'"
}

# gocomics comments db [broken 9 Sep 2013, so killing test] [both
# tests] [restored 14 Oct 2013, as some gocomics stuff comes back]
# dropped 14 Aug 2017-- gocomics changed format ages ago

# define service {
#  use generic-service
#  host_name bcinfo3
#  service_description gocomicsdb
#  check_command raw!"check_http -v -t 15 -f follow -H 0c4b2a5749c0c1a4d5948938a70516c8.gocomics.db.barrycarter.info -R 'SUCCESS' -u '/'"
# }

# gocomics sqlite3 db corrupt as of 14 Aug 2017 + need to replace w
# mysql db, but, until then, killing this test

# TODO: when restoring gocomics test, also restore in montastic,
# disabling for now

# define service {
#  use generic-service
#  host_name bcinfo3
#  service_description gocomicsdb
#  check_command raw!"check_http -v -t 15 -f follow -H 1d84cdca3095edbd4124c815f14d9200.gocomics.db.bcinfo3.barrycarter.info -R 'SUCCESS' -u '/'"
# }

# metar db
define service {
 use generic-service
 host_name bcinfo3
 service_description metardb
 check_command raw!"check_http -v -t 15 -f follow -H 991cbde54a256f1ebeb9b9aef204da73.metarnew.db.bcinfo3.barrycarter.info -R 'SUCCESS' -u '/'"
}

# madis db; the query here checks that all types of data have a recent
# timestamp (though not necessarily a recent observation_time)

# NOTE: this fails (ie, succeeds) if there are NO observations of a
# given type, but this can only happen after 24 hours so I'm OK with
# it [changed to use source, since mesonet has many types, but one source]

# The MySQL query below is:
# SELECT MAX(mt),IF(MAX(mt)>1800,"FAILURE",CONCAT("SUCC","ESS")) AS
# stat FROM (SELECT source,
# UNIX_TIMESTAMP()-UNIX_TIMESTAMP(MAX(timestamp)) AS mt FROM madis
# GROUP BY source) currency

define service {
 use generic-service
 host_name bcinfo3
 service_description madisdb
 check_command raw!"check_http -v -t 15 -f follow -H d644b216d04615bacef7c94a7f9cb457.madis.db.mysql.94y.info -R 'SUCCESS' -u '/'"
}

# wordpress (not checking barrycarter.info itself, though I do on montastic)
define service {
 use generic-service
 host_name bcinfo
 service_description wordpress
 check_command raw!"check_http -v -t 15 -f follow -H wordpress.barrycarter.info -R 'July 2011' -u '/'"
}

# gaim logs
# TODO: consider lowering normal_check_interval here?
# TODO: test uses too much CPU, killing it 23 May 2014
# define service {
#  use generic-service
#  host_name localhost
#  service_description gaimlog
#  ; use of space below is kludge
#  ; TODO: fix!
#  check_command raw!"bc_gaim_log_unanswered( )"
# }

# bc-stream-twitter
define service {
 use generic-service
 host_name localhost
 service_description streamtwit
 ; use of space below is kludge
 ; TODO: fix!
 check_command raw!"bc_stream_twitter_test( )"
}

# make sure nothing in my SPAM mailbox is also flagged important
define service {
 use generic-service
 normal_check_interval 1440
 notification_interval 1440
 host_name localhost
 service_description noimportantspam
 check_command raw!"fgrep X-Status: /home/barrycarter/mail/SPAMMAN | fgrep F"!--func=1is0
}

# confirm files bc-rev-search.pl uses are all sorted properly with
# respect to bcunix (not with respect to their own machines (once a
# day)

# TODO: some of these are named .txt others are named .txt.srt, I
# should really fix this (in the programs that create them) at some
# point

define service {
 use generic-service
 normal_check_interval 1440
 notification_interval 1440
 host_name localhost
 service_description bcunixrevsorted
 check_command raw!"sort -c /bcunix-files-rev.txt"
}


# NOTE: this drive is temporarily on localhost
# As of < 28 Sep 2016, this drive gone, removing service

# define service {
#  use generic-service
#  normal_check_interval 1440
#  notification_interval 1440
#  host_name localhost
#  service_description bcmacrevsorted
#  check_command raw!"sort -c /mnt/sshfs/bcmac-files-rev.txt.srt"
# }

# as of 30 Sep 2016, this drive is a symlink, removing test

# define service {
#  use generic-service
#  normal_check_interval 1440
#  notification_interval 1440
#  host_name localhost
#  service_description bcextdriverevsorted
#  check_command raw!"sort -c /mnt/extdrive/extdrive-files-rev.txt"
# }

# ntp (wrote a kludge webscript to do this [for montastic], but now
# doing it the right way)

# TODO: write ntp!

# On montastic, I use the below to confirm DNS, but don't feel like
# doing it here (even my check_dig is imperfect, because it won't
# catch when one server fails)

# http://network-tools.com/default.asp?prog=dnsrec&noncache=yes&host=barrycarter.info (and look for 204.12.202.206 and aspmx.l.google.com)
