(*

Let S, T, and Q be any three spherical objects such that S emits
light, T does not emit light, and S is potentially eclipsed on Q by T. In the below:

  - sr, tr, and qr refer to the radii of the spheres

  - sx is the x value of the center of S

  - tx is the x value of the center of T

  - y is the shared y value of S and T

Since the centers of S, T, and Q are three points, they necessarily
form a plane; without loss of generality, we can coordinate-ify for
this plane by choosing Q to be at the origin, S and T to have the same y coordinate

*)

line[m_, b_, x_] = m*x + b

Solve[D[x^2 + (m*x+b)^2, x] == 0, x]

x -> -b m / (1 + m ^ 2)

b ^ 2 / (1 + m ^ 2) = square min distance

(*

{x, mx+b}

*)

t1801 = Solve[(x-tx)^2 + (m*x+b-y)^2 == tr, x]

t1802 = x /. t1801[[1]]

t1803 = x /. t1801[[2]]

t1804 = Simplify[t1802 - t1803]


going sx-tx horizontally our radius shrinks from sr to tr

radius = tr at tx, sr at sx

rad[x_] = tr + (x - tx)/(sx - tx)*(sr-tr)


rad[x_] = tr + (x - tx)/(sx - tx)*(sr-tr)

{{x -> (sr tx - sx tr) / (sr - tr)}} (that's the umbral cone x value)

sin(angle from horizontal) = tr/(tx - (sr tx - sx tr) / (sr - tr))

Tan[ArcSin[x]] == x / Sqrt[1 - x ^ 2]

sinAng = tr/(tx - (sr tx - sx tr) / (sr - tr))

sinAng = (sr - tr) / (sx - tx)

tanAng = sinAng/Sqrt[1-sinAng^2]

Solve[y == tanAng*(sr tx - sx tr) / (sr - tr) + b, b]

(if moved down to where y -> 0 )

(sr tx - sx tr) / (sr - tr) would be xval, y would val 0

Solve[0 == tanAng*(sr tx - sx tr) / (sr - tr) + b, b]

angrad[r_, d_] = ArcSin[r/d];

parallax[r_, d_] = ArcTan[r/d];

angrad[r, sq] - angrad[r, sq-qr]

pLine[t_] = {coneX + t, y + m*t}

dist2[t_] = (coneX + t)^2 + (y + m*t)^2

nearest[coneX_, m_] = (-coneX - m y) / (1 + m ^ 2);

{coneX + (-coneX - m y) / (1 + m ^ 2), y + m*((-coneX - m y) / (1 + m ^ 2))}

y (free variable) = x*coneSlope + b

y - coneX*ConeSlope = b

{x, m*x + b}

dist2[x_] = x^2 + (m*x+b)^2

Out[25]= {{x -> -b m / (1 + m ^ 2)}}

b ^ 2 / (1 + m ^ 2)

(y0 - coneX*coneSlope)^2 / (1 + coneSlope^2)

(* work started 31 Dec 2019 *)

(* using x as a free variable *)

sr/(x+st) == tr/x

Out[2]= {{x -> st tr / (sr - tr)}}

u = arcsin((st-tr)/st)

ArcSin[(sr - tr) / st

Sin[u] == sr/sp

Sin[u] == tr/(st-sp)

Solve[sr/sp == tr/(st-sp), sp]


Solve[sr/sp == tr/(st-sp), sp]

Out[59]= {{sp -> sr st / (sr + tr)}}

pt = st tr / (sr + tr)

Solve[tr/pt == sr/(st-pt), pt]


Solve[tr/pt == sr/(st-pt), pt]


Out[3]= {{pt -> st tr / (sr + tr)}}

pt = st*tr/(sr+tr)
sp = st-pt
u = arcsin((sr+tr)/st)
m^2 = (sr+tr)^2/(st^2-(sr + tr)^2)
b = -m*pt

https://www.geogebra.org/classic/mnfrfsby = inumbra


https://www.geogebra.org/classic/eq8km64v = umbra

u = ArcSin[qy/pq]
v = ArcSin[qr/pq]


Out[4]= ArcSin[qr / pq] - ArcSin[qy / pq]
Out[7]= ArcSin[qr / pq] + ArcSin[qy / pq]





